// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RaftMessage.proto
package raft.message;
public final class RaftMessageProto {
  private RaftMessageProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code core.message.MessageType}
   */
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PRE_VOTE = 0;</code>
     */
    PRE_VOTE(0),
    /**
     * <code>VOTE = 1;</code>
     */
    VOTE(1),
    /**
     * <code>HEART = 2;</code>
     */
    HEART(2),
    /**
     * <code>ACK = 3;</code>
     */
    ACK(3),
    /**
     * <code>COMMIT = 4;</code>
     */
    COMMIT(4),
    /**
     * <pre>
     *节点1#节点2.......
     * </pre>
     *
     * <code>NODE = 5;</code>
     */
    NODE(5),
    /**
     * <pre>
     *添加新节点
     * </pre>
     *
     * <code>UN_COMMIT = 6;</code>
     */
    UN_COMMIT(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PRE_VOTE = 0;</code>
     */
    public static final int PRE_VOTE_VALUE = 0;
    /**
     * <code>VOTE = 1;</code>
     */
    public static final int VOTE_VALUE = 1;
    /**
     * <code>HEART = 2;</code>
     */
    public static final int HEART_VALUE = 2;
    /**
     * <code>ACK = 3;</code>
     */
    public static final int ACK_VALUE = 3;
    /**
     * <code>COMMIT = 4;</code>
     */
    public static final int COMMIT_VALUE = 4;
    /**
     * <pre>
     *节点1#节点2.......
     * </pre>
     *
     * <code>NODE = 5;</code>
     */
    public static final int NODE_VALUE = 5;
    /**
     * <pre>
     *添加新节点
     * </pre>
     *
     * <code>UN_COMMIT = 6;</code>
     */
    public static final int UN_COMMIT_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageType valueOf(int value) {
      return forNumber(value);
    }

    public static MessageType forNumber(int value) {
      switch (value) {
        case 0: return PRE_VOTE;
        case 1: return VOTE;
        case 2: return HEART;
        case 3: return ACK;
        case 4: return COMMIT;
        case 5: return NODE;
        case 6: return UN_COMMIT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RaftMessageProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final MessageType[] VALUES = values();

    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:core.message.MessageType)
  }

  public interface RaftMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:core.message.RaftMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.core.message.MessageType message_type = 1;</code>
     */
    int getMessageTypeValue();
    /**
     * <code>.core.message.MessageType message_type = 1;</code>
     */
    RaftMessageProto.MessageType getMessageType();

    /**
     * <code>int32 id = 2;</code>
     */
    int getId();

    /**
     * <code>int64 current_term = 3;</code>
     */
    long getCurrentTerm();

    /**
     * <code>int64 last_applied_index = 4;</code>
     */
    long getLastAppliedIndex();

    /**
     * <code>bool leader = 5;</code>
     */
    boolean getLeader();

    /**
     * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
     */
    boolean hasPreVoteMessage();
    /**
     * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
     */
    RaftMessageProto.PreVoteMessage getPreVoteMessage();
    /**
     * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
     */
    RaftMessageProto.PreVoteMessageOrBuilder getPreVoteMessageOrBuilder();

    /**
     * <code>.core.message.VoteMessage vote_message = 7;</code>
     */
    boolean hasVoteMessage();
    /**
     * <code>.core.message.VoteMessage vote_message = 7;</code>
     */
    RaftMessageProto.VoteMessage getVoteMessage();
    /**
     * <code>.core.message.VoteMessage vote_message = 7;</code>
     */
    RaftMessageProto.VoteMessageOrBuilder getVoteMessageOrBuilder();

    /**
     * <code>.core.message.HeartMessage heart_message = 8;</code>
     */
    boolean hasHeartMessage();
    /**
     * <code>.core.message.HeartMessage heart_message = 8;</code>
     */
    RaftMessageProto.HeartMessage getHeartMessage();
    /**
     * <code>.core.message.HeartMessage heart_message = 8;</code>
     */
    RaftMessageProto.HeartMessageOrBuilder getHeartMessageOrBuilder();

    /**
     * <code>.core.message.AckMessage ack_message = 9;</code>
     */
    boolean hasAckMessage();
    /**
     * <code>.core.message.AckMessage ack_message = 9;</code>
     */
    RaftMessageProto.AckMessage getAckMessage();
    /**
     * <code>.core.message.AckMessage ack_message = 9;</code>
     */
    RaftMessageProto.AckMessageOrBuilder getAckMessageOrBuilder();

    /**
     * <code>.core.message.CommitMessage commit_message = 10;</code>
     */
    boolean hasCommitMessage();
    /**
     * <code>.core.message.CommitMessage commit_message = 10;</code>
     */
    RaftMessageProto.CommitMessage getCommitMessage();
    /**
     * <code>.core.message.CommitMessage commit_message = 10;</code>
     */
    RaftMessageProto.CommitMessageOrBuilder getCommitMessageOrBuilder();

    /**
     * <code>.core.message.NodeMessage node_message = 11;</code>
     */
    boolean hasNodeMessage();
    /**
     * <code>.core.message.NodeMessage node_message = 11;</code>
     */
    RaftMessageProto.NodeMessage getNodeMessage();
    /**
     * <code>.core.message.NodeMessage node_message = 11;</code>
     */
    RaftMessageProto.NodeMessageOrBuilder getNodeMessageOrBuilder();

    /**
     * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
     */
    boolean hasUnCommitMessage();
    /**
     * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
     */
    RaftMessageProto.UnCommitMessage getUnCommitMessage();
    /**
     * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
     */
    RaftMessageProto.UnCommitMessageOrBuilder getUnCommitMessageOrBuilder();

    public RaftMessageProto.RaftMessage.MessageBodyCase getMessageBodyCase();
  }
  /**
   * Protobuf type {@code core.message.RaftMessage}
   */
  public  static final class RaftMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:core.message.RaftMessage)
      RaftMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RaftMessage.newBuilder() to construct.
    private RaftMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RaftMessage() {
      messageType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RaftMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              messageType_ = rawValue;
              break;
            }
            case 16: {

              id_ = input.readInt32();
              break;
            }
            case 24: {

              currentTerm_ = input.readInt64();
              break;
            }
            case 32: {

              lastAppliedIndex_ = input.readInt64();
              break;
            }
            case 40: {

              leader_ = input.readBool();
              break;
            }
            case 50: {
              RaftMessageProto.PreVoteMessage.Builder subBuilder = null;
              if (messageBodyCase_ == 6) {
                subBuilder = ((RaftMessageProto.PreVoteMessage) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(RaftMessageProto.PreVoteMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((RaftMessageProto.PreVoteMessage) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 6;
              break;
            }
            case 58: {
              RaftMessageProto.VoteMessage.Builder subBuilder = null;
              if (messageBodyCase_ == 7) {
                subBuilder = ((RaftMessageProto.VoteMessage) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(RaftMessageProto.VoteMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((RaftMessageProto.VoteMessage) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 7;
              break;
            }
            case 66: {
              RaftMessageProto.HeartMessage.Builder subBuilder = null;
              if (messageBodyCase_ == 8) {
                subBuilder = ((RaftMessageProto.HeartMessage) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(RaftMessageProto.HeartMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((RaftMessageProto.HeartMessage) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 8;
              break;
            }
            case 74: {
              RaftMessageProto.AckMessage.Builder subBuilder = null;
              if (messageBodyCase_ == 9) {
                subBuilder = ((RaftMessageProto.AckMessage) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(RaftMessageProto.AckMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((RaftMessageProto.AckMessage) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 9;
              break;
            }
            case 82: {
              RaftMessageProto.CommitMessage.Builder subBuilder = null;
              if (messageBodyCase_ == 10) {
                subBuilder = ((RaftMessageProto.CommitMessage) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(RaftMessageProto.CommitMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((RaftMessageProto.CommitMessage) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 10;
              break;
            }
            case 90: {
              RaftMessageProto.NodeMessage.Builder subBuilder = null;
              if (messageBodyCase_ == 11) {
                subBuilder = ((RaftMessageProto.NodeMessage) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(RaftMessageProto.NodeMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((RaftMessageProto.NodeMessage) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 11;
              break;
            }
            case 98: {
              RaftMessageProto.UnCommitMessage.Builder subBuilder = null;
              if (messageBodyCase_ == 12) {
                subBuilder = ((RaftMessageProto.UnCommitMessage) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(RaftMessageProto.UnCommitMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((RaftMessageProto.UnCommitMessage) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 12;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RaftMessageProto.internal_static_core_message_RaftMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RaftMessageProto.internal_static_core_message_RaftMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RaftMessageProto.RaftMessage.class, RaftMessageProto.RaftMessage.Builder.class);
    }

    private int messageBodyCase_ = 0;
    private java.lang.Object messageBody_;
    public enum MessageBodyCase
        implements com.google.protobuf.Internal.EnumLite {
      PRE_VOTE_MESSAGE(6),
      VOTE_MESSAGE(7),
      HEART_MESSAGE(8),
      ACK_MESSAGE(9),
      COMMIT_MESSAGE(10),
      NODE_MESSAGE(11),
      UN_COMMIT_MESSAGE(12),
      MESSAGEBODY_NOT_SET(0);
      private final int value;
      private MessageBodyCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MessageBodyCase valueOf(int value) {
        return forNumber(value);
      }

      public static MessageBodyCase forNumber(int value) {
        switch (value) {
          case 6: return PRE_VOTE_MESSAGE;
          case 7: return VOTE_MESSAGE;
          case 8: return HEART_MESSAGE;
          case 9: return ACK_MESSAGE;
          case 10: return COMMIT_MESSAGE;
          case 11: return NODE_MESSAGE;
          case 12: return UN_COMMIT_MESSAGE;
          case 0: return MESSAGEBODY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MessageBodyCase
    getMessageBodyCase() {
      return MessageBodyCase.forNumber(
          messageBodyCase_);
    }

    public static final int MESSAGE_TYPE_FIELD_NUMBER = 1;
    private int messageType_;
    /**
     * <code>.core.message.MessageType message_type = 1;</code>
     */
    public int getMessageTypeValue() {
      return messageType_;
    }
    /**
     * <code>.core.message.MessageType message_type = 1;</code>
     */
    public RaftMessageProto.MessageType getMessageType() {
      @SuppressWarnings("deprecation")
      RaftMessageProto.MessageType result = RaftMessageProto.MessageType.valueOf(messageType_);
      return result == null ? RaftMessageProto.MessageType.UNRECOGNIZED : result;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>int32 id = 2;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int CURRENT_TERM_FIELD_NUMBER = 3;
    private long currentTerm_;
    /**
     * <code>int64 current_term = 3;</code>
     */
    public long getCurrentTerm() {
      return currentTerm_;
    }

    public static final int LAST_APPLIED_INDEX_FIELD_NUMBER = 4;
    private long lastAppliedIndex_;
    /**
     * <code>int64 last_applied_index = 4;</code>
     */
    public long getLastAppliedIndex() {
      return lastAppliedIndex_;
    }

    public static final int LEADER_FIELD_NUMBER = 5;
    private boolean leader_;
    /**
     * <code>bool leader = 5;</code>
     */
    public boolean getLeader() {
      return leader_;
    }

    public static final int PRE_VOTE_MESSAGE_FIELD_NUMBER = 6;
    /**
     * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
     */
    public boolean hasPreVoteMessage() {
      return messageBodyCase_ == 6;
    }
    /**
     * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
     */
    public RaftMessageProto.PreVoteMessage getPreVoteMessage() {
      if (messageBodyCase_ == 6) {
         return (RaftMessageProto.PreVoteMessage) messageBody_;
      }
      return RaftMessageProto.PreVoteMessage.getDefaultInstance();
    }
    /**
     * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
     */
    public RaftMessageProto.PreVoteMessageOrBuilder getPreVoteMessageOrBuilder() {
      if (messageBodyCase_ == 6) {
         return (RaftMessageProto.PreVoteMessage) messageBody_;
      }
      return RaftMessageProto.PreVoteMessage.getDefaultInstance();
    }

    public static final int VOTE_MESSAGE_FIELD_NUMBER = 7;
    /**
     * <code>.core.message.VoteMessage vote_message = 7;</code>
     */
    public boolean hasVoteMessage() {
      return messageBodyCase_ == 7;
    }
    /**
     * <code>.core.message.VoteMessage vote_message = 7;</code>
     */
    public RaftMessageProto.VoteMessage getVoteMessage() {
      if (messageBodyCase_ == 7) {
         return (RaftMessageProto.VoteMessage) messageBody_;
      }
      return RaftMessageProto.VoteMessage.getDefaultInstance();
    }
    /**
     * <code>.core.message.VoteMessage vote_message = 7;</code>
     */
    public RaftMessageProto.VoteMessageOrBuilder getVoteMessageOrBuilder() {
      if (messageBodyCase_ == 7) {
         return (RaftMessageProto.VoteMessage) messageBody_;
      }
      return RaftMessageProto.VoteMessage.getDefaultInstance();
    }

    public static final int HEART_MESSAGE_FIELD_NUMBER = 8;
    /**
     * <code>.core.message.HeartMessage heart_message = 8;</code>
     */
    public boolean hasHeartMessage() {
      return messageBodyCase_ == 8;
    }
    /**
     * <code>.core.message.HeartMessage heart_message = 8;</code>
     */
    public RaftMessageProto.HeartMessage getHeartMessage() {
      if (messageBodyCase_ == 8) {
         return (RaftMessageProto.HeartMessage) messageBody_;
      }
      return RaftMessageProto.HeartMessage.getDefaultInstance();
    }
    /**
     * <code>.core.message.HeartMessage heart_message = 8;</code>
     */
    public RaftMessageProto.HeartMessageOrBuilder getHeartMessageOrBuilder() {
      if (messageBodyCase_ == 8) {
         return (RaftMessageProto.HeartMessage) messageBody_;
      }
      return RaftMessageProto.HeartMessage.getDefaultInstance();
    }

    public static final int ACK_MESSAGE_FIELD_NUMBER = 9;
    /**
     * <code>.core.message.AckMessage ack_message = 9;</code>
     */
    public boolean hasAckMessage() {
      return messageBodyCase_ == 9;
    }
    /**
     * <code>.core.message.AckMessage ack_message = 9;</code>
     */
    public RaftMessageProto.AckMessage getAckMessage() {
      if (messageBodyCase_ == 9) {
         return (RaftMessageProto.AckMessage) messageBody_;
      }
      return RaftMessageProto.AckMessage.getDefaultInstance();
    }
    /**
     * <code>.core.message.AckMessage ack_message = 9;</code>
     */
    public RaftMessageProto.AckMessageOrBuilder getAckMessageOrBuilder() {
      if (messageBodyCase_ == 9) {
         return (RaftMessageProto.AckMessage) messageBody_;
      }
      return RaftMessageProto.AckMessage.getDefaultInstance();
    }

    public static final int COMMIT_MESSAGE_FIELD_NUMBER = 10;
    /**
     * <code>.core.message.CommitMessage commit_message = 10;</code>
     */
    public boolean hasCommitMessage() {
      return messageBodyCase_ == 10;
    }
    /**
     * <code>.core.message.CommitMessage commit_message = 10;</code>
     */
    public RaftMessageProto.CommitMessage getCommitMessage() {
      if (messageBodyCase_ == 10) {
         return (RaftMessageProto.CommitMessage) messageBody_;
      }
      return RaftMessageProto.CommitMessage.getDefaultInstance();
    }
    /**
     * <code>.core.message.CommitMessage commit_message = 10;</code>
     */
    public RaftMessageProto.CommitMessageOrBuilder getCommitMessageOrBuilder() {
      if (messageBodyCase_ == 10) {
         return (RaftMessageProto.CommitMessage) messageBody_;
      }
      return RaftMessageProto.CommitMessage.getDefaultInstance();
    }

    public static final int NODE_MESSAGE_FIELD_NUMBER = 11;
    /**
     * <code>.core.message.NodeMessage node_message = 11;</code>
     */
    public boolean hasNodeMessage() {
      return messageBodyCase_ == 11;
    }
    /**
     * <code>.core.message.NodeMessage node_message = 11;</code>
     */
    public RaftMessageProto.NodeMessage getNodeMessage() {
      if (messageBodyCase_ == 11) {
         return (RaftMessageProto.NodeMessage) messageBody_;
      }
      return RaftMessageProto.NodeMessage.getDefaultInstance();
    }
    /**
     * <code>.core.message.NodeMessage node_message = 11;</code>
     */
    public RaftMessageProto.NodeMessageOrBuilder getNodeMessageOrBuilder() {
      if (messageBodyCase_ == 11) {
         return (RaftMessageProto.NodeMessage) messageBody_;
      }
      return RaftMessageProto.NodeMessage.getDefaultInstance();
    }

    public static final int UN_COMMIT_MESSAGE_FIELD_NUMBER = 12;
    /**
     * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
     */
    public boolean hasUnCommitMessage() {
      return messageBodyCase_ == 12;
    }
    /**
     * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
     */
    public RaftMessageProto.UnCommitMessage getUnCommitMessage() {
      if (messageBodyCase_ == 12) {
         return (RaftMessageProto.UnCommitMessage) messageBody_;
      }
      return RaftMessageProto.UnCommitMessage.getDefaultInstance();
    }
    /**
     * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
     */
    public RaftMessageProto.UnCommitMessageOrBuilder getUnCommitMessageOrBuilder() {
      if (messageBodyCase_ == 12) {
         return (RaftMessageProto.UnCommitMessage) messageBody_;
      }
      return RaftMessageProto.UnCommitMessage.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (messageType_ != RaftMessageProto.MessageType.PRE_VOTE.getNumber()) {
        output.writeEnum(1, messageType_);
      }
      if (id_ != 0) {
        output.writeInt32(2, id_);
      }
      if (currentTerm_ != 0L) {
        output.writeInt64(3, currentTerm_);
      }
      if (lastAppliedIndex_ != 0L) {
        output.writeInt64(4, lastAppliedIndex_);
      }
      if (leader_ != false) {
        output.writeBool(5, leader_);
      }
      if (messageBodyCase_ == 6) {
        output.writeMessage(6, (RaftMessageProto.PreVoteMessage) messageBody_);
      }
      if (messageBodyCase_ == 7) {
        output.writeMessage(7, (RaftMessageProto.VoteMessage) messageBody_);
      }
      if (messageBodyCase_ == 8) {
        output.writeMessage(8, (RaftMessageProto.HeartMessage) messageBody_);
      }
      if (messageBodyCase_ == 9) {
        output.writeMessage(9, (RaftMessageProto.AckMessage) messageBody_);
      }
      if (messageBodyCase_ == 10) {
        output.writeMessage(10, (RaftMessageProto.CommitMessage) messageBody_);
      }
      if (messageBodyCase_ == 11) {
        output.writeMessage(11, (RaftMessageProto.NodeMessage) messageBody_);
      }
      if (messageBodyCase_ == 12) {
        output.writeMessage(12, (RaftMessageProto.UnCommitMessage) messageBody_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (messageType_ != RaftMessageProto.MessageType.PRE_VOTE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageType_);
      }
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (currentTerm_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, currentTerm_);
      }
      if (lastAppliedIndex_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, lastAppliedIndex_);
      }
      if (leader_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, leader_);
      }
      if (messageBodyCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (RaftMessageProto.PreVoteMessage) messageBody_);
      }
      if (messageBodyCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (RaftMessageProto.VoteMessage) messageBody_);
      }
      if (messageBodyCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (RaftMessageProto.HeartMessage) messageBody_);
      }
      if (messageBodyCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (RaftMessageProto.AckMessage) messageBody_);
      }
      if (messageBodyCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (RaftMessageProto.CommitMessage) messageBody_);
      }
      if (messageBodyCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (RaftMessageProto.NodeMessage) messageBody_);
      }
      if (messageBodyCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (RaftMessageProto.UnCommitMessage) messageBody_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RaftMessageProto.RaftMessage)) {
        return super.equals(obj);
      }
      RaftMessageProto.RaftMessage other = (RaftMessageProto.RaftMessage) obj;

      if (messageType_ != other.messageType_) return false;
      if (getId()
          != other.getId()) return false;
      if (getCurrentTerm()
          != other.getCurrentTerm()) return false;
      if (getLastAppliedIndex()
          != other.getLastAppliedIndex()) return false;
      if (getLeader()
          != other.getLeader()) return false;
      if (!getMessageBodyCase().equals(other.getMessageBodyCase())) return false;
      switch (messageBodyCase_) {
        case 6:
          if (!getPreVoteMessage()
              .equals(other.getPreVoteMessage())) return false;
          break;
        case 7:
          if (!getVoteMessage()
              .equals(other.getVoteMessage())) return false;
          break;
        case 8:
          if (!getHeartMessage()
              .equals(other.getHeartMessage())) return false;
          break;
        case 9:
          if (!getAckMessage()
              .equals(other.getAckMessage())) return false;
          break;
        case 10:
          if (!getCommitMessage()
              .equals(other.getCommitMessage())) return false;
          break;
        case 11:
          if (!getNodeMessage()
              .equals(other.getNodeMessage())) return false;
          break;
        case 12:
          if (!getUnCommitMessage()
              .equals(other.getUnCommitMessage())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + messageType_;
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + CURRENT_TERM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCurrentTerm());
      hash = (37 * hash) + LAST_APPLIED_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLastAppliedIndex());
      hash = (37 * hash) + LEADER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLeader());
      switch (messageBodyCase_) {
        case 6:
          hash = (37 * hash) + PRE_VOTE_MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getPreVoteMessage().hashCode();
          break;
        case 7:
          hash = (37 * hash) + VOTE_MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getVoteMessage().hashCode();
          break;
        case 8:
          hash = (37 * hash) + HEART_MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getHeartMessage().hashCode();
          break;
        case 9:
          hash = (37 * hash) + ACK_MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getAckMessage().hashCode();
          break;
        case 10:
          hash = (37 * hash) + COMMIT_MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getCommitMessage().hashCode();
          break;
        case 11:
          hash = (37 * hash) + NODE_MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getNodeMessage().hashCode();
          break;
        case 12:
          hash = (37 * hash) + UN_COMMIT_MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getUnCommitMessage().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RaftMessageProto.RaftMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.RaftMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.RaftMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.RaftMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.RaftMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.RaftMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.RaftMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.RaftMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.RaftMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RaftMessageProto.RaftMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.RaftMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.RaftMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RaftMessageProto.RaftMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code core.message.RaftMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:core.message.RaftMessage)
        RaftMessageProto.RaftMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RaftMessageProto.internal_static_core_message_RaftMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RaftMessageProto.internal_static_core_message_RaftMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RaftMessageProto.RaftMessage.class, RaftMessageProto.RaftMessage.Builder.class);
      }

      // Construct using RaftMessageProto.RaftMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        messageType_ = 0;

        id_ = 0;

        currentTerm_ = 0L;

        lastAppliedIndex_ = 0L;

        leader_ = false;

        messageBodyCase_ = 0;
        messageBody_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RaftMessageProto.internal_static_core_message_RaftMessage_descriptor;
      }

      @java.lang.Override
      public RaftMessageProto.RaftMessage getDefaultInstanceForType() {
        return RaftMessageProto.RaftMessage.getDefaultInstance();
      }

      @java.lang.Override
      public RaftMessageProto.RaftMessage build() {
        RaftMessageProto.RaftMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RaftMessageProto.RaftMessage buildPartial() {
        RaftMessageProto.RaftMessage result = new RaftMessageProto.RaftMessage(this);
        result.messageType_ = messageType_;
        result.id_ = id_;
        result.currentTerm_ = currentTerm_;
        result.lastAppliedIndex_ = lastAppliedIndex_;
        result.leader_ = leader_;
        if (messageBodyCase_ == 6) {
          if (preVoteMessageBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = preVoteMessageBuilder_.build();
          }
        }
        if (messageBodyCase_ == 7) {
          if (voteMessageBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = voteMessageBuilder_.build();
          }
        }
        if (messageBodyCase_ == 8) {
          if (heartMessageBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = heartMessageBuilder_.build();
          }
        }
        if (messageBodyCase_ == 9) {
          if (ackMessageBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = ackMessageBuilder_.build();
          }
        }
        if (messageBodyCase_ == 10) {
          if (commitMessageBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = commitMessageBuilder_.build();
          }
        }
        if (messageBodyCase_ == 11) {
          if (nodeMessageBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = nodeMessageBuilder_.build();
          }
        }
        if (messageBodyCase_ == 12) {
          if (unCommitMessageBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = unCommitMessageBuilder_.build();
          }
        }
        result.messageBodyCase_ = messageBodyCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RaftMessageProto.RaftMessage) {
          return mergeFrom((RaftMessageProto.RaftMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RaftMessageProto.RaftMessage other) {
        if (other == RaftMessageProto.RaftMessage.getDefaultInstance()) return this;
        if (other.messageType_ != 0) {
          setMessageTypeValue(other.getMessageTypeValue());
        }
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getCurrentTerm() != 0L) {
          setCurrentTerm(other.getCurrentTerm());
        }
        if (other.getLastAppliedIndex() != 0L) {
          setLastAppliedIndex(other.getLastAppliedIndex());
        }
        if (other.getLeader() != false) {
          setLeader(other.getLeader());
        }
        switch (other.getMessageBodyCase()) {
          case PRE_VOTE_MESSAGE: {
            mergePreVoteMessage(other.getPreVoteMessage());
            break;
          }
          case VOTE_MESSAGE: {
            mergeVoteMessage(other.getVoteMessage());
            break;
          }
          case HEART_MESSAGE: {
            mergeHeartMessage(other.getHeartMessage());
            break;
          }
          case ACK_MESSAGE: {
            mergeAckMessage(other.getAckMessage());
            break;
          }
          case COMMIT_MESSAGE: {
            mergeCommitMessage(other.getCommitMessage());
            break;
          }
          case NODE_MESSAGE: {
            mergeNodeMessage(other.getNodeMessage());
            break;
          }
          case UN_COMMIT_MESSAGE: {
            mergeUnCommitMessage(other.getUnCommitMessage());
            break;
          }
          case MESSAGEBODY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RaftMessageProto.RaftMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RaftMessageProto.RaftMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int messageBodyCase_ = 0;
      private java.lang.Object messageBody_;
      public MessageBodyCase
          getMessageBodyCase() {
        return MessageBodyCase.forNumber(
            messageBodyCase_);
      }

      public Builder clearMessageBody() {
        messageBodyCase_ = 0;
        messageBody_ = null;
        onChanged();
        return this;
      }


      private int messageType_ = 0;
      /**
       * <code>.core.message.MessageType message_type = 1;</code>
       */
      public int getMessageTypeValue() {
        return messageType_;
      }
      /**
       * <code>.core.message.MessageType message_type = 1;</code>
       */
      public Builder setMessageTypeValue(int value) {
        messageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.core.message.MessageType message_type = 1;</code>
       */
      public RaftMessageProto.MessageType getMessageType() {
        @SuppressWarnings("deprecation")
        RaftMessageProto.MessageType result = RaftMessageProto.MessageType.valueOf(messageType_);
        return result == null ? RaftMessageProto.MessageType.UNRECOGNIZED : result;
      }
      /**
       * <code>.core.message.MessageType message_type = 1;</code>
       */
      public Builder setMessageType(RaftMessageProto.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        messageType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.core.message.MessageType message_type = 1;</code>
       */
      public Builder clearMessageType() {
        
        messageType_ = 0;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <code>int32 id = 2;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 2;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 2;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private long currentTerm_ ;
      /**
       * <code>int64 current_term = 3;</code>
       */
      public long getCurrentTerm() {
        return currentTerm_;
      }
      /**
       * <code>int64 current_term = 3;</code>
       */
      public Builder setCurrentTerm(long value) {
        
        currentTerm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 current_term = 3;</code>
       */
      public Builder clearCurrentTerm() {
        
        currentTerm_ = 0L;
        onChanged();
        return this;
      }

      private long lastAppliedIndex_ ;
      /**
       * <code>int64 last_applied_index = 4;</code>
       */
      public long getLastAppliedIndex() {
        return lastAppliedIndex_;
      }
      /**
       * <code>int64 last_applied_index = 4;</code>
       */
      public Builder setLastAppliedIndex(long value) {
        
        lastAppliedIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 last_applied_index = 4;</code>
       */
      public Builder clearLastAppliedIndex() {
        
        lastAppliedIndex_ = 0L;
        onChanged();
        return this;
      }

      private boolean leader_ ;
      /**
       * <code>bool leader = 5;</code>
       */
      public boolean getLeader() {
        return leader_;
      }
      /**
       * <code>bool leader = 5;</code>
       */
      public Builder setLeader(boolean value) {
        
        leader_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool leader = 5;</code>
       */
      public Builder clearLeader() {
        
        leader_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.PreVoteMessage, RaftMessageProto.PreVoteMessage.Builder, RaftMessageProto.PreVoteMessageOrBuilder> preVoteMessageBuilder_;
      /**
       * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
       */
      public boolean hasPreVoteMessage() {
        return messageBodyCase_ == 6;
      }
      /**
       * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
       */
      public RaftMessageProto.PreVoteMessage getPreVoteMessage() {
        if (preVoteMessageBuilder_ == null) {
          if (messageBodyCase_ == 6) {
            return (RaftMessageProto.PreVoteMessage) messageBody_;
          }
          return RaftMessageProto.PreVoteMessage.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 6) {
            return preVoteMessageBuilder_.getMessage();
          }
          return RaftMessageProto.PreVoteMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
       */
      public Builder setPreVoteMessage(RaftMessageProto.PreVoteMessage value) {
        if (preVoteMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          preVoteMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 6;
        return this;
      }
      /**
       * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
       */
      public Builder setPreVoteMessage(
          RaftMessageProto.PreVoteMessage.Builder builderForValue) {
        if (preVoteMessageBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          preVoteMessageBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 6;
        return this;
      }
      /**
       * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
       */
      public Builder mergePreVoteMessage(RaftMessageProto.PreVoteMessage value) {
        if (preVoteMessageBuilder_ == null) {
          if (messageBodyCase_ == 6 &&
              messageBody_ != RaftMessageProto.PreVoteMessage.getDefaultInstance()) {
            messageBody_ = RaftMessageProto.PreVoteMessage.newBuilder((RaftMessageProto.PreVoteMessage) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 6) {
            preVoteMessageBuilder_.mergeFrom(value);
          }
          preVoteMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 6;
        return this;
      }
      /**
       * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
       */
      public Builder clearPreVoteMessage() {
        if (preVoteMessageBuilder_ == null) {
          if (messageBodyCase_ == 6) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 6) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          preVoteMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
       */
      public RaftMessageProto.PreVoteMessage.Builder getPreVoteMessageBuilder() {
        return getPreVoteMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
       */
      public RaftMessageProto.PreVoteMessageOrBuilder getPreVoteMessageOrBuilder() {
        if ((messageBodyCase_ == 6) && (preVoteMessageBuilder_ != null)) {
          return preVoteMessageBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 6) {
            return (RaftMessageProto.PreVoteMessage) messageBody_;
          }
          return RaftMessageProto.PreVoteMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.PreVoteMessage pre_vote_message = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.PreVoteMessage, RaftMessageProto.PreVoteMessage.Builder, RaftMessageProto.PreVoteMessageOrBuilder> 
          getPreVoteMessageFieldBuilder() {
        if (preVoteMessageBuilder_ == null) {
          if (!(messageBodyCase_ == 6)) {
            messageBody_ = RaftMessageProto.PreVoteMessage.getDefaultInstance();
          }
          preVoteMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RaftMessageProto.PreVoteMessage, RaftMessageProto.PreVoteMessage.Builder, RaftMessageProto.PreVoteMessageOrBuilder>(
                  (RaftMessageProto.PreVoteMessage) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 6;
        onChanged();;
        return preVoteMessageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.VoteMessage, RaftMessageProto.VoteMessage.Builder, RaftMessageProto.VoteMessageOrBuilder> voteMessageBuilder_;
      /**
       * <code>.core.message.VoteMessage vote_message = 7;</code>
       */
      public boolean hasVoteMessage() {
        return messageBodyCase_ == 7;
      }
      /**
       * <code>.core.message.VoteMessage vote_message = 7;</code>
       */
      public RaftMessageProto.VoteMessage getVoteMessage() {
        if (voteMessageBuilder_ == null) {
          if (messageBodyCase_ == 7) {
            return (RaftMessageProto.VoteMessage) messageBody_;
          }
          return RaftMessageProto.VoteMessage.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 7) {
            return voteMessageBuilder_.getMessage();
          }
          return RaftMessageProto.VoteMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.VoteMessage vote_message = 7;</code>
       */
      public Builder setVoteMessage(RaftMessageProto.VoteMessage value) {
        if (voteMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          voteMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 7;
        return this;
      }
      /**
       * <code>.core.message.VoteMessage vote_message = 7;</code>
       */
      public Builder setVoteMessage(
          RaftMessageProto.VoteMessage.Builder builderForValue) {
        if (voteMessageBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          voteMessageBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 7;
        return this;
      }
      /**
       * <code>.core.message.VoteMessage vote_message = 7;</code>
       */
      public Builder mergeVoteMessage(RaftMessageProto.VoteMessage value) {
        if (voteMessageBuilder_ == null) {
          if (messageBodyCase_ == 7 &&
              messageBody_ != RaftMessageProto.VoteMessage.getDefaultInstance()) {
            messageBody_ = RaftMessageProto.VoteMessage.newBuilder((RaftMessageProto.VoteMessage) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 7) {
            voteMessageBuilder_.mergeFrom(value);
          }
          voteMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 7;
        return this;
      }
      /**
       * <code>.core.message.VoteMessage vote_message = 7;</code>
       */
      public Builder clearVoteMessage() {
        if (voteMessageBuilder_ == null) {
          if (messageBodyCase_ == 7) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 7) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          voteMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.core.message.VoteMessage vote_message = 7;</code>
       */
      public RaftMessageProto.VoteMessage.Builder getVoteMessageBuilder() {
        return getVoteMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.core.message.VoteMessage vote_message = 7;</code>
       */
      public RaftMessageProto.VoteMessageOrBuilder getVoteMessageOrBuilder() {
        if ((messageBodyCase_ == 7) && (voteMessageBuilder_ != null)) {
          return voteMessageBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 7) {
            return (RaftMessageProto.VoteMessage) messageBody_;
          }
          return RaftMessageProto.VoteMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.VoteMessage vote_message = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.VoteMessage, RaftMessageProto.VoteMessage.Builder, RaftMessageProto.VoteMessageOrBuilder> 
          getVoteMessageFieldBuilder() {
        if (voteMessageBuilder_ == null) {
          if (!(messageBodyCase_ == 7)) {
            messageBody_ = RaftMessageProto.VoteMessage.getDefaultInstance();
          }
          voteMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RaftMessageProto.VoteMessage, RaftMessageProto.VoteMessage.Builder, RaftMessageProto.VoteMessageOrBuilder>(
                  (RaftMessageProto.VoteMessage) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 7;
        onChanged();;
        return voteMessageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.HeartMessage, RaftMessageProto.HeartMessage.Builder, RaftMessageProto.HeartMessageOrBuilder> heartMessageBuilder_;
      /**
       * <code>.core.message.HeartMessage heart_message = 8;</code>
       */
      public boolean hasHeartMessage() {
        return messageBodyCase_ == 8;
      }
      /**
       * <code>.core.message.HeartMessage heart_message = 8;</code>
       */
      public RaftMessageProto.HeartMessage getHeartMessage() {
        if (heartMessageBuilder_ == null) {
          if (messageBodyCase_ == 8) {
            return (RaftMessageProto.HeartMessage) messageBody_;
          }
          return RaftMessageProto.HeartMessage.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 8) {
            return heartMessageBuilder_.getMessage();
          }
          return RaftMessageProto.HeartMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.HeartMessage heart_message = 8;</code>
       */
      public Builder setHeartMessage(RaftMessageProto.HeartMessage value) {
        if (heartMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          heartMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 8;
        return this;
      }
      /**
       * <code>.core.message.HeartMessage heart_message = 8;</code>
       */
      public Builder setHeartMessage(
          RaftMessageProto.HeartMessage.Builder builderForValue) {
        if (heartMessageBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          heartMessageBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 8;
        return this;
      }
      /**
       * <code>.core.message.HeartMessage heart_message = 8;</code>
       */
      public Builder mergeHeartMessage(RaftMessageProto.HeartMessage value) {
        if (heartMessageBuilder_ == null) {
          if (messageBodyCase_ == 8 &&
              messageBody_ != RaftMessageProto.HeartMessage.getDefaultInstance()) {
            messageBody_ = RaftMessageProto.HeartMessage.newBuilder((RaftMessageProto.HeartMessage) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 8) {
            heartMessageBuilder_.mergeFrom(value);
          }
          heartMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 8;
        return this;
      }
      /**
       * <code>.core.message.HeartMessage heart_message = 8;</code>
       */
      public Builder clearHeartMessage() {
        if (heartMessageBuilder_ == null) {
          if (messageBodyCase_ == 8) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 8) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          heartMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.core.message.HeartMessage heart_message = 8;</code>
       */
      public RaftMessageProto.HeartMessage.Builder getHeartMessageBuilder() {
        return getHeartMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.core.message.HeartMessage heart_message = 8;</code>
       */
      public RaftMessageProto.HeartMessageOrBuilder getHeartMessageOrBuilder() {
        if ((messageBodyCase_ == 8) && (heartMessageBuilder_ != null)) {
          return heartMessageBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 8) {
            return (RaftMessageProto.HeartMessage) messageBody_;
          }
          return RaftMessageProto.HeartMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.HeartMessage heart_message = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.HeartMessage, RaftMessageProto.HeartMessage.Builder, RaftMessageProto.HeartMessageOrBuilder> 
          getHeartMessageFieldBuilder() {
        if (heartMessageBuilder_ == null) {
          if (!(messageBodyCase_ == 8)) {
            messageBody_ = RaftMessageProto.HeartMessage.getDefaultInstance();
          }
          heartMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RaftMessageProto.HeartMessage, RaftMessageProto.HeartMessage.Builder, RaftMessageProto.HeartMessageOrBuilder>(
                  (RaftMessageProto.HeartMessage) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 8;
        onChanged();;
        return heartMessageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.AckMessage, RaftMessageProto.AckMessage.Builder, RaftMessageProto.AckMessageOrBuilder> ackMessageBuilder_;
      /**
       * <code>.core.message.AckMessage ack_message = 9;</code>
       */
      public boolean hasAckMessage() {
        return messageBodyCase_ == 9;
      }
      /**
       * <code>.core.message.AckMessage ack_message = 9;</code>
       */
      public RaftMessageProto.AckMessage getAckMessage() {
        if (ackMessageBuilder_ == null) {
          if (messageBodyCase_ == 9) {
            return (RaftMessageProto.AckMessage) messageBody_;
          }
          return RaftMessageProto.AckMessage.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 9) {
            return ackMessageBuilder_.getMessage();
          }
          return RaftMessageProto.AckMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.AckMessage ack_message = 9;</code>
       */
      public Builder setAckMessage(RaftMessageProto.AckMessage value) {
        if (ackMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          ackMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 9;
        return this;
      }
      /**
       * <code>.core.message.AckMessage ack_message = 9;</code>
       */
      public Builder setAckMessage(
          RaftMessageProto.AckMessage.Builder builderForValue) {
        if (ackMessageBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          ackMessageBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 9;
        return this;
      }
      /**
       * <code>.core.message.AckMessage ack_message = 9;</code>
       */
      public Builder mergeAckMessage(RaftMessageProto.AckMessage value) {
        if (ackMessageBuilder_ == null) {
          if (messageBodyCase_ == 9 &&
              messageBody_ != RaftMessageProto.AckMessage.getDefaultInstance()) {
            messageBody_ = RaftMessageProto.AckMessage.newBuilder((RaftMessageProto.AckMessage) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 9) {
            ackMessageBuilder_.mergeFrom(value);
          }
          ackMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 9;
        return this;
      }
      /**
       * <code>.core.message.AckMessage ack_message = 9;</code>
       */
      public Builder clearAckMessage() {
        if (ackMessageBuilder_ == null) {
          if (messageBodyCase_ == 9) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 9) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          ackMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.core.message.AckMessage ack_message = 9;</code>
       */
      public RaftMessageProto.AckMessage.Builder getAckMessageBuilder() {
        return getAckMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.core.message.AckMessage ack_message = 9;</code>
       */
      public RaftMessageProto.AckMessageOrBuilder getAckMessageOrBuilder() {
        if ((messageBodyCase_ == 9) && (ackMessageBuilder_ != null)) {
          return ackMessageBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 9) {
            return (RaftMessageProto.AckMessage) messageBody_;
          }
          return RaftMessageProto.AckMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.AckMessage ack_message = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.AckMessage, RaftMessageProto.AckMessage.Builder, RaftMessageProto.AckMessageOrBuilder> 
          getAckMessageFieldBuilder() {
        if (ackMessageBuilder_ == null) {
          if (!(messageBodyCase_ == 9)) {
            messageBody_ = RaftMessageProto.AckMessage.getDefaultInstance();
          }
          ackMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RaftMessageProto.AckMessage, RaftMessageProto.AckMessage.Builder, RaftMessageProto.AckMessageOrBuilder>(
                  (RaftMessageProto.AckMessage) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 9;
        onChanged();;
        return ackMessageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.CommitMessage, RaftMessageProto.CommitMessage.Builder, RaftMessageProto.CommitMessageOrBuilder> commitMessageBuilder_;
      /**
       * <code>.core.message.CommitMessage commit_message = 10;</code>
       */
      public boolean hasCommitMessage() {
        return messageBodyCase_ == 10;
      }
      /**
       * <code>.core.message.CommitMessage commit_message = 10;</code>
       */
      public RaftMessageProto.CommitMessage getCommitMessage() {
        if (commitMessageBuilder_ == null) {
          if (messageBodyCase_ == 10) {
            return (RaftMessageProto.CommitMessage) messageBody_;
          }
          return RaftMessageProto.CommitMessage.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 10) {
            return commitMessageBuilder_.getMessage();
          }
          return RaftMessageProto.CommitMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.CommitMessage commit_message = 10;</code>
       */
      public Builder setCommitMessage(RaftMessageProto.CommitMessage value) {
        if (commitMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          commitMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 10;
        return this;
      }
      /**
       * <code>.core.message.CommitMessage commit_message = 10;</code>
       */
      public Builder setCommitMessage(
          RaftMessageProto.CommitMessage.Builder builderForValue) {
        if (commitMessageBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          commitMessageBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 10;
        return this;
      }
      /**
       * <code>.core.message.CommitMessage commit_message = 10;</code>
       */
      public Builder mergeCommitMessage(RaftMessageProto.CommitMessage value) {
        if (commitMessageBuilder_ == null) {
          if (messageBodyCase_ == 10 &&
              messageBody_ != RaftMessageProto.CommitMessage.getDefaultInstance()) {
            messageBody_ = RaftMessageProto.CommitMessage.newBuilder((RaftMessageProto.CommitMessage) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 10) {
            commitMessageBuilder_.mergeFrom(value);
          }
          commitMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 10;
        return this;
      }
      /**
       * <code>.core.message.CommitMessage commit_message = 10;</code>
       */
      public Builder clearCommitMessage() {
        if (commitMessageBuilder_ == null) {
          if (messageBodyCase_ == 10) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 10) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          commitMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.core.message.CommitMessage commit_message = 10;</code>
       */
      public RaftMessageProto.CommitMessage.Builder getCommitMessageBuilder() {
        return getCommitMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.core.message.CommitMessage commit_message = 10;</code>
       */
      public RaftMessageProto.CommitMessageOrBuilder getCommitMessageOrBuilder() {
        if ((messageBodyCase_ == 10) && (commitMessageBuilder_ != null)) {
          return commitMessageBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 10) {
            return (RaftMessageProto.CommitMessage) messageBody_;
          }
          return RaftMessageProto.CommitMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.CommitMessage commit_message = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.CommitMessage, RaftMessageProto.CommitMessage.Builder, RaftMessageProto.CommitMessageOrBuilder> 
          getCommitMessageFieldBuilder() {
        if (commitMessageBuilder_ == null) {
          if (!(messageBodyCase_ == 10)) {
            messageBody_ = RaftMessageProto.CommitMessage.getDefaultInstance();
          }
          commitMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RaftMessageProto.CommitMessage, RaftMessageProto.CommitMessage.Builder, RaftMessageProto.CommitMessageOrBuilder>(
                  (RaftMessageProto.CommitMessage) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 10;
        onChanged();;
        return commitMessageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.NodeMessage, RaftMessageProto.NodeMessage.Builder, RaftMessageProto.NodeMessageOrBuilder> nodeMessageBuilder_;
      /**
       * <code>.core.message.NodeMessage node_message = 11;</code>
       */
      public boolean hasNodeMessage() {
        return messageBodyCase_ == 11;
      }
      /**
       * <code>.core.message.NodeMessage node_message = 11;</code>
       */
      public RaftMessageProto.NodeMessage getNodeMessage() {
        if (nodeMessageBuilder_ == null) {
          if (messageBodyCase_ == 11) {
            return (RaftMessageProto.NodeMessage) messageBody_;
          }
          return RaftMessageProto.NodeMessage.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 11) {
            return nodeMessageBuilder_.getMessage();
          }
          return RaftMessageProto.NodeMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.NodeMessage node_message = 11;</code>
       */
      public Builder setNodeMessage(RaftMessageProto.NodeMessage value) {
        if (nodeMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          nodeMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 11;
        return this;
      }
      /**
       * <code>.core.message.NodeMessage node_message = 11;</code>
       */
      public Builder setNodeMessage(
          RaftMessageProto.NodeMessage.Builder builderForValue) {
        if (nodeMessageBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          nodeMessageBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 11;
        return this;
      }
      /**
       * <code>.core.message.NodeMessage node_message = 11;</code>
       */
      public Builder mergeNodeMessage(RaftMessageProto.NodeMessage value) {
        if (nodeMessageBuilder_ == null) {
          if (messageBodyCase_ == 11 &&
              messageBody_ != RaftMessageProto.NodeMessage.getDefaultInstance()) {
            messageBody_ = RaftMessageProto.NodeMessage.newBuilder((RaftMessageProto.NodeMessage) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 11) {
            nodeMessageBuilder_.mergeFrom(value);
          }
          nodeMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 11;
        return this;
      }
      /**
       * <code>.core.message.NodeMessage node_message = 11;</code>
       */
      public Builder clearNodeMessage() {
        if (nodeMessageBuilder_ == null) {
          if (messageBodyCase_ == 11) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 11) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          nodeMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.core.message.NodeMessage node_message = 11;</code>
       */
      public RaftMessageProto.NodeMessage.Builder getNodeMessageBuilder() {
        return getNodeMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.core.message.NodeMessage node_message = 11;</code>
       */
      public RaftMessageProto.NodeMessageOrBuilder getNodeMessageOrBuilder() {
        if ((messageBodyCase_ == 11) && (nodeMessageBuilder_ != null)) {
          return nodeMessageBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 11) {
            return (RaftMessageProto.NodeMessage) messageBody_;
          }
          return RaftMessageProto.NodeMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.NodeMessage node_message = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.NodeMessage, RaftMessageProto.NodeMessage.Builder, RaftMessageProto.NodeMessageOrBuilder> 
          getNodeMessageFieldBuilder() {
        if (nodeMessageBuilder_ == null) {
          if (!(messageBodyCase_ == 11)) {
            messageBody_ = RaftMessageProto.NodeMessage.getDefaultInstance();
          }
          nodeMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RaftMessageProto.NodeMessage, RaftMessageProto.NodeMessage.Builder, RaftMessageProto.NodeMessageOrBuilder>(
                  (RaftMessageProto.NodeMessage) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 11;
        onChanged();;
        return nodeMessageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.UnCommitMessage, RaftMessageProto.UnCommitMessage.Builder, RaftMessageProto.UnCommitMessageOrBuilder> unCommitMessageBuilder_;
      /**
       * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
       */
      public boolean hasUnCommitMessage() {
        return messageBodyCase_ == 12;
      }
      /**
       * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
       */
      public RaftMessageProto.UnCommitMessage getUnCommitMessage() {
        if (unCommitMessageBuilder_ == null) {
          if (messageBodyCase_ == 12) {
            return (RaftMessageProto.UnCommitMessage) messageBody_;
          }
          return RaftMessageProto.UnCommitMessage.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 12) {
            return unCommitMessageBuilder_.getMessage();
          }
          return RaftMessageProto.UnCommitMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
       */
      public Builder setUnCommitMessage(RaftMessageProto.UnCommitMessage value) {
        if (unCommitMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          unCommitMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 12;
        return this;
      }
      /**
       * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
       */
      public Builder setUnCommitMessage(
          RaftMessageProto.UnCommitMessage.Builder builderForValue) {
        if (unCommitMessageBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          unCommitMessageBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 12;
        return this;
      }
      /**
       * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
       */
      public Builder mergeUnCommitMessage(RaftMessageProto.UnCommitMessage value) {
        if (unCommitMessageBuilder_ == null) {
          if (messageBodyCase_ == 12 &&
              messageBody_ != RaftMessageProto.UnCommitMessage.getDefaultInstance()) {
            messageBody_ = RaftMessageProto.UnCommitMessage.newBuilder((RaftMessageProto.UnCommitMessage) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 12) {
            unCommitMessageBuilder_.mergeFrom(value);
          }
          unCommitMessageBuilder_.setMessage(value);
        }
        messageBodyCase_ = 12;
        return this;
      }
      /**
       * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
       */
      public Builder clearUnCommitMessage() {
        if (unCommitMessageBuilder_ == null) {
          if (messageBodyCase_ == 12) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 12) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          unCommitMessageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
       */
      public RaftMessageProto.UnCommitMessage.Builder getUnCommitMessageBuilder() {
        return getUnCommitMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
       */
      public RaftMessageProto.UnCommitMessageOrBuilder getUnCommitMessageOrBuilder() {
        if ((messageBodyCase_ == 12) && (unCommitMessageBuilder_ != null)) {
          return unCommitMessageBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 12) {
            return (RaftMessageProto.UnCommitMessage) messageBody_;
          }
          return RaftMessageProto.UnCommitMessage.getDefaultInstance();
        }
      }
      /**
       * <code>.core.message.UnCommitMessage un_commit_message = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RaftMessageProto.UnCommitMessage, RaftMessageProto.UnCommitMessage.Builder, RaftMessageProto.UnCommitMessageOrBuilder> 
          getUnCommitMessageFieldBuilder() {
        if (unCommitMessageBuilder_ == null) {
          if (!(messageBodyCase_ == 12)) {
            messageBody_ = RaftMessageProto.UnCommitMessage.getDefaultInstance();
          }
          unCommitMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RaftMessageProto.UnCommitMessage, RaftMessageProto.UnCommitMessage.Builder, RaftMessageProto.UnCommitMessageOrBuilder>(
                  (RaftMessageProto.UnCommitMessage) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 12;
        onChanged();;
        return unCommitMessageBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:core.message.RaftMessage)
    }

    // @@protoc_insertion_point(class_scope:core.message.RaftMessage)
    private static final RaftMessageProto.RaftMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RaftMessageProto.RaftMessage();
    }

    public static RaftMessageProto.RaftMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RaftMessage>
        PARSER = new com.google.protobuf.AbstractParser<RaftMessage>() {
      @java.lang.Override
      public RaftMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RaftMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RaftMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RaftMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RaftMessageProto.RaftMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PreVoteMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:core.message.PreVoteMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool vote_for = 1;</code>
     */
    boolean getVoteFor();
  }
  /**
   * Protobuf type {@code core.message.PreVoteMessage}
   */
  public  static final class PreVoteMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:core.message.PreVoteMessage)
      PreVoteMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PreVoteMessage.newBuilder() to construct.
    private PreVoteMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PreVoteMessage() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PreVoteMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              voteFor_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RaftMessageProto.internal_static_core_message_PreVoteMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RaftMessageProto.internal_static_core_message_PreVoteMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RaftMessageProto.PreVoteMessage.class, RaftMessageProto.PreVoteMessage.Builder.class);
    }

    public static final int VOTE_FOR_FIELD_NUMBER = 1;
    private boolean voteFor_;
    /**
     * <code>bool vote_for = 1;</code>
     */
    public boolean getVoteFor() {
      return voteFor_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (voteFor_ != false) {
        output.writeBool(1, voteFor_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (voteFor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, voteFor_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RaftMessageProto.PreVoteMessage)) {
        return super.equals(obj);
      }
      RaftMessageProto.PreVoteMessage other = (RaftMessageProto.PreVoteMessage) obj;

      if (getVoteFor()
          != other.getVoteFor()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VOTE_FOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getVoteFor());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RaftMessageProto.PreVoteMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.PreVoteMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.PreVoteMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.PreVoteMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.PreVoteMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.PreVoteMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.PreVoteMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.PreVoteMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.PreVoteMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RaftMessageProto.PreVoteMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.PreVoteMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.PreVoteMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RaftMessageProto.PreVoteMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code core.message.PreVoteMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:core.message.PreVoteMessage)
        RaftMessageProto.PreVoteMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RaftMessageProto.internal_static_core_message_PreVoteMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RaftMessageProto.internal_static_core_message_PreVoteMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RaftMessageProto.PreVoteMessage.class, RaftMessageProto.PreVoteMessage.Builder.class);
      }

      // Construct using RaftMessageProto.PreVoteMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        voteFor_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RaftMessageProto.internal_static_core_message_PreVoteMessage_descriptor;
      }

      @java.lang.Override
      public RaftMessageProto.PreVoteMessage getDefaultInstanceForType() {
        return RaftMessageProto.PreVoteMessage.getDefaultInstance();
      }

      @java.lang.Override
      public RaftMessageProto.PreVoteMessage build() {
        RaftMessageProto.PreVoteMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RaftMessageProto.PreVoteMessage buildPartial() {
        RaftMessageProto.PreVoteMessage result = new RaftMessageProto.PreVoteMessage(this);
        result.voteFor_ = voteFor_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RaftMessageProto.PreVoteMessage) {
          return mergeFrom((RaftMessageProto.PreVoteMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RaftMessageProto.PreVoteMessage other) {
        if (other == RaftMessageProto.PreVoteMessage.getDefaultInstance()) return this;
        if (other.getVoteFor() != false) {
          setVoteFor(other.getVoteFor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RaftMessageProto.PreVoteMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RaftMessageProto.PreVoteMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean voteFor_ ;
      /**
       * <code>bool vote_for = 1;</code>
       */
      public boolean getVoteFor() {
        return voteFor_;
      }
      /**
       * <code>bool vote_for = 1;</code>
       */
      public Builder setVoteFor(boolean value) {
        
        voteFor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool vote_for = 1;</code>
       */
      public Builder clearVoteFor() {
        
        voteFor_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:core.message.PreVoteMessage)
    }

    // @@protoc_insertion_point(class_scope:core.message.PreVoteMessage)
    private static final RaftMessageProto.PreVoteMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RaftMessageProto.PreVoteMessage();
    }

    public static RaftMessageProto.PreVoteMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PreVoteMessage>
        PARSER = new com.google.protobuf.AbstractParser<PreVoteMessage>() {
      @java.lang.Override
      public PreVoteMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PreVoteMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PreVoteMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PreVoteMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RaftMessageProto.PreVoteMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VoteMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:core.message.VoteMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool vote_for = 1;</code>
     */
    boolean getVoteFor();
  }
  /**
   * Protobuf type {@code core.message.VoteMessage}
   */
  public  static final class VoteMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:core.message.VoteMessage)
      VoteMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VoteMessage.newBuilder() to construct.
    private VoteMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VoteMessage() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VoteMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              voteFor_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RaftMessageProto.internal_static_core_message_VoteMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RaftMessageProto.internal_static_core_message_VoteMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RaftMessageProto.VoteMessage.class, RaftMessageProto.VoteMessage.Builder.class);
    }

    public static final int VOTE_FOR_FIELD_NUMBER = 1;
    private boolean voteFor_;
    /**
     * <code>bool vote_for = 1;</code>
     */
    public boolean getVoteFor() {
      return voteFor_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (voteFor_ != false) {
        output.writeBool(1, voteFor_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (voteFor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, voteFor_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RaftMessageProto.VoteMessage)) {
        return super.equals(obj);
      }
      RaftMessageProto.VoteMessage other = (RaftMessageProto.VoteMessage) obj;

      if (getVoteFor()
          != other.getVoteFor()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VOTE_FOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getVoteFor());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RaftMessageProto.VoteMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.VoteMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.VoteMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.VoteMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.VoteMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.VoteMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.VoteMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.VoteMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.VoteMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RaftMessageProto.VoteMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.VoteMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.VoteMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RaftMessageProto.VoteMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code core.message.VoteMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:core.message.VoteMessage)
        RaftMessageProto.VoteMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RaftMessageProto.internal_static_core_message_VoteMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RaftMessageProto.internal_static_core_message_VoteMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RaftMessageProto.VoteMessage.class, RaftMessageProto.VoteMessage.Builder.class);
      }

      // Construct using RaftMessageProto.VoteMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        voteFor_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RaftMessageProto.internal_static_core_message_VoteMessage_descriptor;
      }

      @java.lang.Override
      public RaftMessageProto.VoteMessage getDefaultInstanceForType() {
        return RaftMessageProto.VoteMessage.getDefaultInstance();
      }

      @java.lang.Override
      public RaftMessageProto.VoteMessage build() {
        RaftMessageProto.VoteMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RaftMessageProto.VoteMessage buildPartial() {
        RaftMessageProto.VoteMessage result = new RaftMessageProto.VoteMessage(this);
        result.voteFor_ = voteFor_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RaftMessageProto.VoteMessage) {
          return mergeFrom((RaftMessageProto.VoteMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RaftMessageProto.VoteMessage other) {
        if (other == RaftMessageProto.VoteMessage.getDefaultInstance()) return this;
        if (other.getVoteFor() != false) {
          setVoteFor(other.getVoteFor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RaftMessageProto.VoteMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RaftMessageProto.VoteMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean voteFor_ ;
      /**
       * <code>bool vote_for = 1;</code>
       */
      public boolean getVoteFor() {
        return voteFor_;
      }
      /**
       * <code>bool vote_for = 1;</code>
       */
      public Builder setVoteFor(boolean value) {
        
        voteFor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool vote_for = 1;</code>
       */
      public Builder clearVoteFor() {
        
        voteFor_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:core.message.VoteMessage)
    }

    // @@protoc_insertion_point(class_scope:core.message.VoteMessage)
    private static final RaftMessageProto.VoteMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RaftMessageProto.VoteMessage();
    }

    public static RaftMessageProto.VoteMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VoteMessage>
        PARSER = new com.google.protobuf.AbstractParser<VoteMessage>() {
      @java.lang.Override
      public VoteMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VoteMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VoteMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VoteMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RaftMessageProto.VoteMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeartMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:core.message.HeartMessage)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code core.message.HeartMessage}
   */
  public  static final class HeartMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:core.message.HeartMessage)
      HeartMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HeartMessage.newBuilder() to construct.
    private HeartMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HeartMessage() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HeartMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RaftMessageProto.internal_static_core_message_HeartMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RaftMessageProto.internal_static_core_message_HeartMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RaftMessageProto.HeartMessage.class, RaftMessageProto.HeartMessage.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RaftMessageProto.HeartMessage)) {
        return super.equals(obj);
      }
      RaftMessageProto.HeartMessage other = (RaftMessageProto.HeartMessage) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RaftMessageProto.HeartMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.HeartMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.HeartMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.HeartMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.HeartMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.HeartMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.HeartMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.HeartMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.HeartMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RaftMessageProto.HeartMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.HeartMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.HeartMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RaftMessageProto.HeartMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code core.message.HeartMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:core.message.HeartMessage)
        RaftMessageProto.HeartMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RaftMessageProto.internal_static_core_message_HeartMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RaftMessageProto.internal_static_core_message_HeartMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RaftMessageProto.HeartMessage.class, RaftMessageProto.HeartMessage.Builder.class);
      }

      // Construct using RaftMessageProto.HeartMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RaftMessageProto.internal_static_core_message_HeartMessage_descriptor;
      }

      @java.lang.Override
      public RaftMessageProto.HeartMessage getDefaultInstanceForType() {
        return RaftMessageProto.HeartMessage.getDefaultInstance();
      }

      @java.lang.Override
      public RaftMessageProto.HeartMessage build() {
        RaftMessageProto.HeartMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RaftMessageProto.HeartMessage buildPartial() {
        RaftMessageProto.HeartMessage result = new RaftMessageProto.HeartMessage(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RaftMessageProto.HeartMessage) {
          return mergeFrom((RaftMessageProto.HeartMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RaftMessageProto.HeartMessage other) {
        if (other == RaftMessageProto.HeartMessage.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RaftMessageProto.HeartMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RaftMessageProto.HeartMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:core.message.HeartMessage)
    }

    // @@protoc_insertion_point(class_scope:core.message.HeartMessage)
    private static final RaftMessageProto.HeartMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RaftMessageProto.HeartMessage();
    }

    public static RaftMessageProto.HeartMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HeartMessage>
        PARSER = new com.google.protobuf.AbstractParser<HeartMessage>() {
      @java.lang.Override
      public HeartMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeartMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HeartMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HeartMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RaftMessageProto.HeartMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AckMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:core.message.AckMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 ack_index = 1;</code>
     */
    long getAckIndex();
  }
  /**
   * Protobuf type {@code core.message.AckMessage}
   */
  public  static final class AckMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:core.message.AckMessage)
      AckMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AckMessage.newBuilder() to construct.
    private AckMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AckMessage() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AckMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              ackIndex_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RaftMessageProto.internal_static_core_message_AckMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RaftMessageProto.internal_static_core_message_AckMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RaftMessageProto.AckMessage.class, RaftMessageProto.AckMessage.Builder.class);
    }

    public static final int ACK_INDEX_FIELD_NUMBER = 1;
    private long ackIndex_;
    /**
     * <code>int64 ack_index = 1;</code>
     */
    public long getAckIndex() {
      return ackIndex_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ackIndex_ != 0L) {
        output.writeInt64(1, ackIndex_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ackIndex_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, ackIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RaftMessageProto.AckMessage)) {
        return super.equals(obj);
      }
      RaftMessageProto.AckMessage other = (RaftMessageProto.AckMessage) obj;

      if (getAckIndex()
          != other.getAckIndex()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ACK_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAckIndex());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RaftMessageProto.AckMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.AckMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.AckMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.AckMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.AckMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.AckMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.AckMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.AckMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.AckMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RaftMessageProto.AckMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.AckMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.AckMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RaftMessageProto.AckMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code core.message.AckMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:core.message.AckMessage)
        RaftMessageProto.AckMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RaftMessageProto.internal_static_core_message_AckMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RaftMessageProto.internal_static_core_message_AckMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RaftMessageProto.AckMessage.class, RaftMessageProto.AckMessage.Builder.class);
      }

      // Construct using RaftMessageProto.AckMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ackIndex_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RaftMessageProto.internal_static_core_message_AckMessage_descriptor;
      }

      @java.lang.Override
      public RaftMessageProto.AckMessage getDefaultInstanceForType() {
        return RaftMessageProto.AckMessage.getDefaultInstance();
      }

      @java.lang.Override
      public RaftMessageProto.AckMessage build() {
        RaftMessageProto.AckMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RaftMessageProto.AckMessage buildPartial() {
        RaftMessageProto.AckMessage result = new RaftMessageProto.AckMessage(this);
        result.ackIndex_ = ackIndex_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RaftMessageProto.AckMessage) {
          return mergeFrom((RaftMessageProto.AckMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RaftMessageProto.AckMessage other) {
        if (other == RaftMessageProto.AckMessage.getDefaultInstance()) return this;
        if (other.getAckIndex() != 0L) {
          setAckIndex(other.getAckIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RaftMessageProto.AckMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RaftMessageProto.AckMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long ackIndex_ ;
      /**
       * <code>int64 ack_index = 1;</code>
       */
      public long getAckIndex() {
        return ackIndex_;
      }
      /**
       * <code>int64 ack_index = 1;</code>
       */
      public Builder setAckIndex(long value) {
        
        ackIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 ack_index = 1;</code>
       */
      public Builder clearAckIndex() {
        
        ackIndex_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:core.message.AckMessage)
    }

    // @@protoc_insertion_point(class_scope:core.message.AckMessage)
    private static final RaftMessageProto.AckMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RaftMessageProto.AckMessage();
    }

    public static RaftMessageProto.AckMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AckMessage>
        PARSER = new com.google.protobuf.AbstractParser<AckMessage>() {
      @java.lang.Override
      public AckMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AckMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AckMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AckMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RaftMessageProto.AckMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CommitMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:core.message.CommitMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string commit_message = 1;</code>
     */
    java.lang.String getCommitMessage();
    /**
     * <code>string commit_message = 1;</code>
     */
    com.google.protobuf.ByteString
        getCommitMessageBytes();
  }
  /**
   * <pre>
   *可以一下传多条然后特殊字符分开
   * </pre>
   *
   * Protobuf type {@code core.message.CommitMessage}
   */
  public  static final class CommitMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:core.message.CommitMessage)
      CommitMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CommitMessage.newBuilder() to construct.
    private CommitMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CommitMessage() {
      commitMessage_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CommitMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              commitMessage_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RaftMessageProto.internal_static_core_message_CommitMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RaftMessageProto.internal_static_core_message_CommitMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RaftMessageProto.CommitMessage.class, RaftMessageProto.CommitMessage.Builder.class);
    }

    public static final int COMMIT_MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object commitMessage_;
    /**
     * <code>string commit_message = 1;</code>
     */
    public java.lang.String getCommitMessage() {
      java.lang.Object ref = commitMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commitMessage_ = s;
        return s;
      }
    }
    /**
     * <code>string commit_message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCommitMessageBytes() {
      java.lang.Object ref = commitMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        commitMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getCommitMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, commitMessage_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getCommitMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, commitMessage_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RaftMessageProto.CommitMessage)) {
        return super.equals(obj);
      }
      RaftMessageProto.CommitMessage other = (RaftMessageProto.CommitMessage) obj;

      if (!getCommitMessage()
          .equals(other.getCommitMessage())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMMIT_MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getCommitMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RaftMessageProto.CommitMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.CommitMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.CommitMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.CommitMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.CommitMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.CommitMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.CommitMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.CommitMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.CommitMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RaftMessageProto.CommitMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.CommitMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.CommitMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RaftMessageProto.CommitMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *可以一下传多条然后特殊字符分开
     * </pre>
     *
     * Protobuf type {@code core.message.CommitMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:core.message.CommitMessage)
        RaftMessageProto.CommitMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RaftMessageProto.internal_static_core_message_CommitMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RaftMessageProto.internal_static_core_message_CommitMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RaftMessageProto.CommitMessage.class, RaftMessageProto.CommitMessage.Builder.class);
      }

      // Construct using RaftMessageProto.CommitMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        commitMessage_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RaftMessageProto.internal_static_core_message_CommitMessage_descriptor;
      }

      @java.lang.Override
      public RaftMessageProto.CommitMessage getDefaultInstanceForType() {
        return RaftMessageProto.CommitMessage.getDefaultInstance();
      }

      @java.lang.Override
      public RaftMessageProto.CommitMessage build() {
        RaftMessageProto.CommitMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RaftMessageProto.CommitMessage buildPartial() {
        RaftMessageProto.CommitMessage result = new RaftMessageProto.CommitMessage(this);
        result.commitMessage_ = commitMessage_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RaftMessageProto.CommitMessage) {
          return mergeFrom((RaftMessageProto.CommitMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RaftMessageProto.CommitMessage other) {
        if (other == RaftMessageProto.CommitMessage.getDefaultInstance()) return this;
        if (!other.getCommitMessage().isEmpty()) {
          commitMessage_ = other.commitMessage_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RaftMessageProto.CommitMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RaftMessageProto.CommitMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object commitMessage_ = "";
      /**
       * <code>string commit_message = 1;</code>
       */
      public java.lang.String getCommitMessage() {
        java.lang.Object ref = commitMessage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          commitMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string commit_message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCommitMessageBytes() {
        java.lang.Object ref = commitMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          commitMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string commit_message = 1;</code>
       */
      public Builder setCommitMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        commitMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string commit_message = 1;</code>
       */
      public Builder clearCommitMessage() {
        
        commitMessage_ = getDefaultInstance().getCommitMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string commit_message = 1;</code>
       */
      public Builder setCommitMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        commitMessage_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:core.message.CommitMessage)
    }

    // @@protoc_insertion_point(class_scope:core.message.CommitMessage)
    private static final RaftMessageProto.CommitMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RaftMessageProto.CommitMessage();
    }

    public static RaftMessageProto.CommitMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CommitMessage>
        PARSER = new com.google.protobuf.AbstractParser<CommitMessage>() {
      @java.lang.Override
      public CommitMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommitMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CommitMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CommitMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RaftMessageProto.CommitMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:core.message.NodeMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string node_message = 1;</code>
     */
    java.lang.String getNodeMessage();
    /**
     * <code>string node_message = 1;</code>
     */
    com.google.protobuf.ByteString
        getNodeMessageBytes();
  }
  /**
   * <pre>
   *同步节点信息
   * </pre>
   *
   * Protobuf type {@code core.message.NodeMessage}
   */
  public  static final class NodeMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:core.message.NodeMessage)
      NodeMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodeMessage.newBuilder() to construct.
    private NodeMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeMessage() {
      nodeMessage_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NodeMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              nodeMessage_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RaftMessageProto.internal_static_core_message_NodeMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RaftMessageProto.internal_static_core_message_NodeMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RaftMessageProto.NodeMessage.class, RaftMessageProto.NodeMessage.Builder.class);
    }

    public static final int NODE_MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object nodeMessage_;
    /**
     * <code>string node_message = 1;</code>
     */
    public java.lang.String getNodeMessage() {
      java.lang.Object ref = nodeMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeMessage_ = s;
        return s;
      }
    }
    /**
     * <code>string node_message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNodeMessageBytes() {
      java.lang.Object ref = nodeMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNodeMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodeMessage_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNodeMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodeMessage_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RaftMessageProto.NodeMessage)) {
        return super.equals(obj);
      }
      RaftMessageProto.NodeMessage other = (RaftMessageProto.NodeMessage) obj;

      if (!getNodeMessage()
          .equals(other.getNodeMessage())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getNodeMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RaftMessageProto.NodeMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.NodeMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.NodeMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.NodeMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.NodeMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.NodeMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.NodeMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.NodeMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.NodeMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RaftMessageProto.NodeMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.NodeMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.NodeMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RaftMessageProto.NodeMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *同步节点信息
     * </pre>
     *
     * Protobuf type {@code core.message.NodeMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:core.message.NodeMessage)
        RaftMessageProto.NodeMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RaftMessageProto.internal_static_core_message_NodeMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RaftMessageProto.internal_static_core_message_NodeMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RaftMessageProto.NodeMessage.class, RaftMessageProto.NodeMessage.Builder.class);
      }

      // Construct using RaftMessageProto.NodeMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        nodeMessage_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RaftMessageProto.internal_static_core_message_NodeMessage_descriptor;
      }

      @java.lang.Override
      public RaftMessageProto.NodeMessage getDefaultInstanceForType() {
        return RaftMessageProto.NodeMessage.getDefaultInstance();
      }

      @java.lang.Override
      public RaftMessageProto.NodeMessage build() {
        RaftMessageProto.NodeMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RaftMessageProto.NodeMessage buildPartial() {
        RaftMessageProto.NodeMessage result = new RaftMessageProto.NodeMessage(this);
        result.nodeMessage_ = nodeMessage_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RaftMessageProto.NodeMessage) {
          return mergeFrom((RaftMessageProto.NodeMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RaftMessageProto.NodeMessage other) {
        if (other == RaftMessageProto.NodeMessage.getDefaultInstance()) return this;
        if (!other.getNodeMessage().isEmpty()) {
          nodeMessage_ = other.nodeMessage_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RaftMessageProto.NodeMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RaftMessageProto.NodeMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object nodeMessage_ = "";
      /**
       * <code>string node_message = 1;</code>
       */
      public java.lang.String getNodeMessage() {
        java.lang.Object ref = nodeMessage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodeMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string node_message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNodeMessageBytes() {
        java.lang.Object ref = nodeMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string node_message = 1;</code>
       */
      public Builder setNodeMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodeMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string node_message = 1;</code>
       */
      public Builder clearNodeMessage() {
        
        nodeMessage_ = getDefaultInstance().getNodeMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string node_message = 1;</code>
       */
      public Builder setNodeMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodeMessage_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:core.message.NodeMessage)
    }

    // @@protoc_insertion_point(class_scope:core.message.NodeMessage)
    private static final RaftMessageProto.NodeMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RaftMessageProto.NodeMessage();
    }

    public static RaftMessageProto.NodeMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeMessage>
        PARSER = new com.google.protobuf.AbstractParser<NodeMessage>() {
      @java.lang.Override
      public NodeMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodeMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodeMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RaftMessageProto.NodeMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnCommitMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:core.message.UnCommitMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string un_commit_message = 1;</code>
     */
    java.lang.String getUnCommitMessage();
    /**
     * <code>string un_commit_message = 1;</code>
     */
    com.google.protobuf.ByteString
        getUnCommitMessageBytes();
  }
  /**
   * Protobuf type {@code core.message.UnCommitMessage}
   */
  public  static final class UnCommitMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:core.message.UnCommitMessage)
      UnCommitMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UnCommitMessage.newBuilder() to construct.
    private UnCommitMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UnCommitMessage() {
      unCommitMessage_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UnCommitMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              unCommitMessage_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RaftMessageProto.internal_static_core_message_UnCommitMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RaftMessageProto.internal_static_core_message_UnCommitMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RaftMessageProto.UnCommitMessage.class, RaftMessageProto.UnCommitMessage.Builder.class);
    }

    public static final int UN_COMMIT_MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object unCommitMessage_;
    /**
     * <code>string un_commit_message = 1;</code>
     */
    public java.lang.String getUnCommitMessage() {
      java.lang.Object ref = unCommitMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        unCommitMessage_ = s;
        return s;
      }
    }
    /**
     * <code>string un_commit_message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUnCommitMessageBytes() {
      java.lang.Object ref = unCommitMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        unCommitMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUnCommitMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, unCommitMessage_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUnCommitMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, unCommitMessage_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RaftMessageProto.UnCommitMessage)) {
        return super.equals(obj);
      }
      RaftMessageProto.UnCommitMessage other = (RaftMessageProto.UnCommitMessage) obj;

      if (!getUnCommitMessage()
          .equals(other.getUnCommitMessage())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UN_COMMIT_MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getUnCommitMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RaftMessageProto.UnCommitMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.UnCommitMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.UnCommitMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.UnCommitMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.UnCommitMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RaftMessageProto.UnCommitMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RaftMessageProto.UnCommitMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.UnCommitMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.UnCommitMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RaftMessageProto.UnCommitMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RaftMessageProto.UnCommitMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RaftMessageProto.UnCommitMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RaftMessageProto.UnCommitMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code core.message.UnCommitMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:core.message.UnCommitMessage)
        RaftMessageProto.UnCommitMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RaftMessageProto.internal_static_core_message_UnCommitMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RaftMessageProto.internal_static_core_message_UnCommitMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RaftMessageProto.UnCommitMessage.class, RaftMessageProto.UnCommitMessage.Builder.class);
      }

      // Construct using RaftMessageProto.UnCommitMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        unCommitMessage_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RaftMessageProto.internal_static_core_message_UnCommitMessage_descriptor;
      }

      @java.lang.Override
      public RaftMessageProto.UnCommitMessage getDefaultInstanceForType() {
        return RaftMessageProto.UnCommitMessage.getDefaultInstance();
      }

      @java.lang.Override
      public RaftMessageProto.UnCommitMessage build() {
        RaftMessageProto.UnCommitMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public RaftMessageProto.UnCommitMessage buildPartial() {
        RaftMessageProto.UnCommitMessage result = new RaftMessageProto.UnCommitMessage(this);
        result.unCommitMessage_ = unCommitMessage_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RaftMessageProto.UnCommitMessage) {
          return mergeFrom((RaftMessageProto.UnCommitMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RaftMessageProto.UnCommitMessage other) {
        if (other == RaftMessageProto.UnCommitMessage.getDefaultInstance()) return this;
        if (!other.getUnCommitMessage().isEmpty()) {
          unCommitMessage_ = other.unCommitMessage_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RaftMessageProto.UnCommitMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RaftMessageProto.UnCommitMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object unCommitMessage_ = "";
      /**
       * <code>string un_commit_message = 1;</code>
       */
      public java.lang.String getUnCommitMessage() {
        java.lang.Object ref = unCommitMessage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          unCommitMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string un_commit_message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUnCommitMessageBytes() {
        java.lang.Object ref = unCommitMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          unCommitMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string un_commit_message = 1;</code>
       */
      public Builder setUnCommitMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        unCommitMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string un_commit_message = 1;</code>
       */
      public Builder clearUnCommitMessage() {
        
        unCommitMessage_ = getDefaultInstance().getUnCommitMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string un_commit_message = 1;</code>
       */
      public Builder setUnCommitMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        unCommitMessage_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:core.message.UnCommitMessage)
    }

    // @@protoc_insertion_point(class_scope:core.message.UnCommitMessage)
    private static final RaftMessageProto.UnCommitMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RaftMessageProto.UnCommitMessage();
    }

    public static RaftMessageProto.UnCommitMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UnCommitMessage>
        PARSER = new com.google.protobuf.AbstractParser<UnCommitMessage>() {
      @java.lang.Override
      public UnCommitMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnCommitMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UnCommitMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UnCommitMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public RaftMessageProto.UnCommitMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_core_message_RaftMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_core_message_RaftMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_core_message_PreVoteMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_core_message_PreVoteMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_core_message_VoteMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_core_message_VoteMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_core_message_HeartMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_core_message_HeartMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_core_message_AckMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_core_message_AckMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_core_message_CommitMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_core_message_CommitMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_core_message_NodeMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_core_message_NodeMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_core_message_UnCommitMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_core_message_UnCommitMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021RaftMessage.proto\022\014core.message\"\224\004\n\013Ra" +
      "ftMessage\022/\n\014message_type\030\001 \001(\0162\031.core.m" +
      "essage.MessageType\022\n\n\002id\030\002 \001(\005\022\024\n\014curren" +
      "t_term\030\003 \001(\003\022\032\n\022last_applied_index\030\004 \001(\003" +
      "\022\016\n\006leader\030\005 \001(\010\0228\n\020pre_vote_message\030\006 \001" +
      "(\0132\034.core.message.PreVoteMessageH\000\0221\n\014vo" +
      "te_message\030\007 \001(\0132\031.core.message.VoteMess" +
      "ageH\000\0223\n\rheart_message\030\010 \001(\0132\032.core.mess" +
      "age.HeartMessageH\000\022/\n\013ack_message\030\t \001(\0132" +
      "\030.core.message.AckMessageH\000\0225\n\016commit_me" +
      "ssage\030\n \001(\0132\033.core.message.CommitMessage" +
      "H\000\0221\n\014node_message\030\013 \001(\0132\031.core.message." +
      "NodeMessageH\000\022:\n\021un_commit_message\030\014 \001(\013" +
      "2\035.core.message.UnCommitMessageH\000B\r\n\013Mes" +
      "sageBody\"\"\n\016PreVoteMessage\022\020\n\010vote_for\030\001" +
      " \001(\010\"\037\n\013VoteMessage\022\020\n\010vote_for\030\001 \001(\010\"\016\n" +
      "\014HeartMessage\"\037\n\nAckMessage\022\021\n\tack_index" +
      "\030\001 \001(\003\"\'\n\rCommitMessage\022\026\n\016commit_messag" +
      "e\030\001 \001(\t\"#\n\013NodeMessage\022\024\n\014node_message\030\001" +
      " \001(\t\",\n\017UnCommitMessage\022\031\n\021un_commit_mes" +
      "sage\030\001 \001(\t*^\n\013MessageType\022\014\n\010PRE_VOTE\020\000\022" +
      "\010\n\004VOTE\020\001\022\t\n\005HEART\020\002\022\007\n\003ACK\020\003\022\n\n\006COMMIT\020" +
      "\004\022\010\n\004NODE\020\005\022\r\n\tUN_COMMIT\020\006B\024\n\000B\020RaftMess" +
      "ageProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_core_message_RaftMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_core_message_RaftMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_core_message_RaftMessage_descriptor,
        new java.lang.String[] { "MessageType", "Id", "CurrentTerm", "LastAppliedIndex", "Leader", "PreVoteMessage", "VoteMessage", "HeartMessage", "AckMessage", "CommitMessage", "NodeMessage", "UnCommitMessage", "MessageBody", });
    internal_static_core_message_PreVoteMessage_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_core_message_PreVoteMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_core_message_PreVoteMessage_descriptor,
        new java.lang.String[] { "VoteFor", });
    internal_static_core_message_VoteMessage_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_core_message_VoteMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_core_message_VoteMessage_descriptor,
        new java.lang.String[] { "VoteFor", });
    internal_static_core_message_HeartMessage_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_core_message_HeartMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_core_message_HeartMessage_descriptor,
        new java.lang.String[] { });
    internal_static_core_message_AckMessage_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_core_message_AckMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_core_message_AckMessage_descriptor,
        new java.lang.String[] { "AckIndex", });
    internal_static_core_message_CommitMessage_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_core_message_CommitMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_core_message_CommitMessage_descriptor,
        new java.lang.String[] { "CommitMessage", });
    internal_static_core_message_NodeMessage_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_core_message_NodeMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_core_message_NodeMessage_descriptor,
        new java.lang.String[] { "NodeMessage", });
    internal_static_core_message_UnCommitMessage_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_core_message_UnCommitMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_core_message_UnCommitMessage_descriptor,
        new java.lang.String[] { "UnCommitMessage", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
